@use "./reset";
@use "./themes";
@use "./themeSwitcher";
@use "./pageProgress";

/*
This specific case can be achieved by using something way "older" - the "em" unit.
By default the em size is based on it's parent font-size, so changing all texts to use "em"
instead of "rem" or "px" and changing the font-size of the <body /> will do more or less the same thing.

This being said I tend to ignore the "em" - first because it has a "bubbling"/cascading effect and
often this brings more problems to the table than anything else and second - because I'm pretty convinced 
that in a bigger and "real" codebase this would only bring confusion and broken sizes.

Using a css variable with a simple function to calculate the size on the other hand I think is way easier
to track, understand and control. Also we can use "px" or "rem" without any issue.
*/

:root {
  --base-font-size: 1;
}
@function textSize($value) {
  @return calc($value * var(--base-font-size));
}

section > h2 {
  color: var(--clr-sectionTitle);
}

/* Custom styles specific to this page */
body {
  font-family: "Arial", sans-serif;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  background-color: var(--clr-light);
  color: var(--clr-dark);
}
a {
  text-decoration: none;
  color: var(--clr-primary);
  transition: color 300ms ease-in-out;
}
a:hover {
  color: #9ebc9f;
}

/* Header */

.header {
  display: flex;
  align-items: center;
  padding: 0.5rem 2rem;
  gap: 1rem;
  background-color: var(--clr-light);
  position: sticky;
  top: 0px;
  z-index: 100;
}

.header .logo {
  width: 2.5rem;
}

.header .nav {
  display: flex;
  margin-left: auto;
  gap: 1rem;
}

.header .nav ul {
  display: flex;
  gap: 1rem;
  text-transform: uppercase;
}

.header .textSizer {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

/* Style the hero section */
.hero {
  background-image: url("../assets/hero.jpg");
  background-size: cover;
  background-position: center;
  color: var(--clr-light);
  text-align: center;
  padding: 150px 0;
  height: 90vh;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  margin: 0;
}

.hero::before {
  content: "";
  position: absolute;
  inset: 0;
  background-color: black;
  opacity: 0.6;
}

.hero h1 {
  font-size: textSize(3rem);
  position: relative;
  z-index: 1;
}

/* Style the about us section */
.about-us {
  text-align: center;
  padding: 80px 0;
  max-width: 1280px;
  margin: 0 auto;
}

.about-us h2 {
  font-size: textSize(2.5rem);
  margin-bottom: 30px;
}

.about-us p {
  font-size: textSize(1.2rem);
  line-height: 1.6;
  color: var(--clr-dark);
}

.company-logos {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 30px;
}

.company-logos img {
  max-width: 100px;
  margin: 0 20px;
}

/* Style the features section */
.features {
  text-align: center;
  padding: 80px 0;
}

.features h2 {
  font-size: textSize(2.5rem);
  margin-bottom: 30px;
}

.features {
  max-width: 1280px;
  margin: 0 auto;
  padding: 4rem 2rem;
}

.features .grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1.5rem;
}

.features .feature {
  background-color: var(--clr-primary-light);
  padding: 1rem 0.5rem;
  border: 2px solid var(--clr-primary);
  border-radius: 0.75rem;
  box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
}

.features .feature h3 {
  font-size: textSize(1.75rem);
  margin-bottom: 1rem;
  color: var(--clr-primary);
}

.features .feature p {
  font-size: textSize(1.2rem);
  line-height: 1.6;
}

/* Style the contact us section */
.contact-us {
  text-align: center;
  padding: 80px 0;
}

.contact-us h2 {
  font-size: textSize(2.5rem);
  color: var(--clr-sectionTitle);
  margin-bottom: 30px;
}

.contact-info {
  margin-top: 30px;
}

.contact-info p {
  font-size: textSize(1.2rem);
  color: #666;
  margin-bottom: 10px;
}

.contact-form {
  max-width: 600px;
  margin: 0 auto;
}

.contact-form input,
.contact-form textarea,
.contact-form button {
  width: 100%;
  margin-bottom: 1rem;
  padding: 0.5rem 0.75rem;
  font-size: textSize(1rem);
  border-radius: 0.5rem;
  border: 2px solid var(--clr-primary);
}

.contact-form button {
  all: unset;
  background-color: var(--clr-primary-light);
  cursor: pointer;
  transition: background-color 300ms ease-in-out;
  padding: 0.5rem 0.25rem;
  border-radius: 0.5rem;
  width: 100%;
}

.contact-form button:hover {
  background-color: var(--clr-primary);
}
